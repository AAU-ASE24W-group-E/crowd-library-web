name: Build

on:
  push:
    branches:
      - main
      - '*-*'  # All feature branches
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Vitest Coverage
        run: npm run test:coverage

      - name: Start Dev Server
        run: npm run dev &

      - name: Wait on Dev Server
        run: npx wait-on http://localhost:5173

      - name: Run Cypress
        run: npx cypress run --browser chrome --headless

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info
      - name: Set Ref for Docker Build
        id: set_ref
        run: echo "ref=${{ github.ref }}" >> $GITHUB_OUTPUT

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      packages: write
    steps:
      - name: Checkout from build
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.build.outputs.ref }}

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build application
        run: npm run build-only

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          platforms: linux/amd64,linux/arm64

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            --tag ghcr.io/aau-ase24w-group-e/crowd-library-web:latest \
            .